# awk是

# 样例文件如下
$ cat db.txt
Ip,Henry 29 32 23 27
Frank,Joe 26 29 22 28
Gill,Marry 25 30 20 25
Avery,Adam 25 31 19 21
Chow,Samuel 23 29 19 25
Dible,Liz 22 30 20 22
Warn,Suzanne 23 29 19 23
Dow,Juila 24 29 20 20
Low,juila 22 21 19 18
Joe,Sarah 19 21 18 20

# 搜索Dow并打印出来
$ awk '/Dow/' db.txt
$ grep Dow db.txt
$ sed -n '/Dow/p' db.txt
输出:
Dow,Juila 24 29 20 20

# 搜索Juila或juila
$ awk '/[Jj]uila/' db.txt
$ grep [Jj]uila db.txt
输出:
Dow,Juila 24 29 20 20
Low,juila 22 21 19 18

# 打印第2列
$ awk '{print $2}' db.txt
输出:
29
26
25
25
23
22
23
24
22
19

# 同时打印多个列
$ awk '{print $2,$4}' db.txt
输出:
29 23
26 22
25 20
25 19
23 19
22 20
23 19
24 20
22 19
19 18

# 打印2个列，但以tab分隔
$ awk '{print $2,"\t",$4}' db.txt 
输出:
29   23
26   22
25   20
25   19
23   19
22   20
23   19
24   20
22   19
19   18

# 搜索Chow并打印第3列
$ awk '/Chow/{print $3}' db.txt
输出:
29

# 打印从Frank到Low之间所有行的第4列
$ awk '/Frank/,/Low/{print $4}' db.txt
输出:
22
20
19
19
20
19
20
19

# 打印第5行后面的内容
$ awk 'NR>5' db.txt
输出:
Dible,Liz 22 30 20 22
Warn,Suzanne 23 29 19 23
Dow,Juila 24 29 20 20
Low,juila 22 21 19 18
Joe,Sarah 19 21 18 20

# 打印456三行
awk 'NR>3 && NR<7' db.txt
输出:
Avery,Adam  25  31  19  21
Chow,Samuel 23  29  19  25
Dible,Liz 22  30  20  22

# 查找第三列中含有29的行
$ awk '$3 ~/29/' db.txt
输出:
Frank,Joe   26  29  22  28
Chow,Samuel 23  29  19  25
Warn,Suzanne  23  29  19  23
Dow,Juila 24  29  20  20

# 查找第三列中大于29的行并打印第五列
$ awk '$3 >29 {print $5}' db.txt
输出:
27
25
21
22

# 打印第四行后面的第三列
$ awk '(NR>4){print $3}' db.txt
输出:
29
30
29
29
21
21

# 在开头输出一行提示
$ awk 'BEGIN{print "This is the filtered output"}(NR>4){print $3}' db.txt
输出:
This is the filtered output
29
30
29
29
21
21

# 同上，但是在末尾输出
$ awk '(NR>4){print $3}END{print "This is the end of filter output"}' db.txt
输出:
29
30
29
29
21
21
This is the end of filter output

# 利用awk做求和运算并在最后打印
printf '1\n2\n3\n' | awk '{ sum += $1} END {print sum}'

# 统计登录shell为/bin/sh的用户有多少
awk -F ':' '$NF ~ /\/bin\/sh/ { n++ }; END { print n }' /etc/passwd

# 统计uid为偶数的用户
awk 'NR % 2 == 0' /etc/passwd

# uid和gid相同的用户
awk -F ':' '$3==$4' passwd.txt

# 颠倒每一行显示
awk 'BEGIN{ORS="";}{ for (i=NF; i>0; i--) print $i," "; print "\n"; }' db.txt

